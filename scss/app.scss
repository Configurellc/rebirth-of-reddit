$setWidth: 35%;
$breakpoints: (
  'small': 0px,
  'medium': 600px,
  'large':  1200px
) !default;

// Found this Mixin at CSS-Tricks
/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

body{
  background-color: cornflowerblue;

}

h1{
  margin: auto;
  text-align: center;
  font-size: 5rem;
}

#animalCage {
  margin: auto;
  width: 100%;
  display: flex;
  flex-flow: wrap;
  justify-content: space-between;
  justify-content: center;
  // height: 10rem;
  // flex-direction: column;
  // align-items: center;
}

#navigation{
  display: flex;
  justify-content: center;
  background-color: white;
}

#picture-container{
  p{
    color: green;
  }
  box-sizing: border-box;
  border: 20px solid;
  background-color: white;
  flex-basis: 30%;
  text-align: center;
  font-size: 2rem;
  font: bold;

}


  @include respond-to (medium){
    #picture-container{
      display: flex;
      flex-direction: column;
       flex-basis: 40%;
       margin: 4px 40px 0 0px;


    }

  }

@include respond-to (large){
  #picture-container{
    display: flex;
    flex-direction: column;
    flex-basis: 40%;
    margin: 4px 40px 0 0px;

     &:hover{
      color: blue;
      }

  }
}

img{
margin: auto;
width: 10em;
}